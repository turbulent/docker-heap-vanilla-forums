server_name {{VAR_NGINX_SERVER_NAME}}{{ " " ~ VAR_NGINX_SERVER_ALIASES|ensurelist|join(" ") ~ ';' if VAR_NGINX_SERVER_ALIASES else ";" }} 

root {{VAR_NGINX_DOCROOT}};
index index.php index.html;

client_max_body_size {{VAR_NGINX_MAX_BODY_SIZE}};

{%- if VAR_NGINX_LOADBALANCER_IPS|ensurelist|length %}
real_ip_header {{VAR_NGINX_LOADBALANCER_HEADER|default('X-Real-IP')}};
{%- for lbip in VAR_NGINX_LOADBALANCER_IPS|ensurelist %}
set_real_ip_from {{lbip}};
{%- endfor %}
{%- endif %}

proxy_set_header   Host             $host;
proxy_set_header   X-Real-IP        $remote_addr;
proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
proxy_redirect  off;
proxy_read_timeout {{VAR_NGINX_PROXY_READ_TIMEOUT}};
proxy_pass_header Expires;
proxy_pass_header Cache-Control;
proxy_pass_header Last-Modified;
proxy_pass_header ETag;
proxy_pass_header Content-Length;

location ~ (\.svn|\.git|\.php|\.gitignore|\.sql|\.sh|\.conf|\.htaccess)$ { deny all; break; }
location ~ /\. { access_log off; log_not_found off; deny all; }

{%- for map in VAR_NGINX_PROXYMAP|ensurelist %}
location {{map.location}} { 
  proxy_pass {{map.destination}}; 
  {%- if map.websocket %}
  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection "upgrade";
  {% endif %}
  break; 
}
{%- endfor %}

{%- for map in VAR_NGINX_REDIRECTMAP|ensurelist %}
location {{map.location}} { return {{map.code|default('301')}} {{map.destination}}; }
{%- endfor %}

{%- if VAR_NGINX_AUTHMAP %}
{%- for map in VAR_NGINX_AUTHMAP|ensurelist %}
location {{map.location}} { 
  {%- if map.authfile %} 
  auth_basic "Restricted";
  auth_basic_user_file {{map.authfile}}; 
  {%- else %}
  auth_basic off;
  {%- endif %}

  {%- if VAR_NGINX_CACHEMAP %}
  {%- for map in VAR_NGINX_CACHEMAP|ensurelist %}
  location {{map.location}} {
    {%- if map.expires %}
    expires {{map.expires}};
    {%- endif %}
  }
  {%- endfor %}
  {%- endif %}
  
  try_files $uri $uri/ /index.php$is_args$args; 
}
{%- endfor %}
{%- endif %}

location ~* "^/build/" { deny all; return 403; }
location ~* "^/cache/" { deny all; return 403; }
location ~* "^/cgi-bin/" { deny all; return 403; }
location ~* "^/uploads/import/" { deny all; return 403; }
location ~* "^/conf/" { deny all; return 403; }
location ~* "^/tests/" { deny all; return 403; }
location ~* "^/vendor/" { deny all; return 403; }

location / { 
  try_files $uri @vanilla; 
}

location @vanilla {
   fastcgi_pass   php-fpm-tcp;
   fastcgi_index  index.php;
   include        fastcgi_params;

   set $script     /index.php;
   set $path_info  $uri;

   fastcgi_param  SCRIPT_FILENAME    $document_root$script;
   fastcgi_param  SCRIPT_NAME        $script;
   fastcgi_param  PATH_INFO          $path_info;
   fastcgi_param  X_REWRITE          1; # Needed for pretty URLs
}

{%- if VAR_NGINX_EXTRACONF %}
include {{VAR_NGINX_EXTRACONF}};
{%- endif %}
